{"ast":null,"code":"var _jsxFileName = \"C:\\\\GTZ_Local_Source\\\\tax-app\\\\src\\\\Components\\\\cardConatiner.js\";\nimport React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nexport default class CardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Categories: [],\n      serviceBaseUrl: \"https://gtz-proj-neo-01.southindia.cloudapp.azure.com/JsonToWebAPI2/v1\"\n    };\n  }\n\n  componentWillMount() {\n    $.ajax({\n      url: `${this.state.serviceBaseUrl}/Categories/RiskProfiles`,\n      dataType: \"json\",\n      success: function (data) {\n        this.setState({\n          Categories: data\n        }); //this.applyChart(data);\n\n        console.log(data[0]);\n      }.bind(this),\n      error: function (error) {\n        console.log(error);\n      }.bind(this)\n    });\n    document.documentElement.className += \"ontouchstart\" in document.documentElement ? 'touch-app' : 'no-touch-app';\n  }\n\n  applyChart(stats) {\n    //Common chart options for risk cards\n    var chartOptions = {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie',\n        margin: 0,\n        defaultSeriesType: 'areaspline',\n        backgroundColor: '#F2F5F8',\n        spacingLeft: 0\n      },\n      title: {\n        text: ''\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: false,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: false\n        }\n      }\n    }; // Build the chart\n\n    for (var cardIndex = 0; cardIndex < stats.length; cardIndex++) {\n      var chartID = 'CardChartContainer' + (cardIndex + 1);\n      Highcharts.chart(chartID, {\n        chart: chartOptions.chart,\n        title: chartOptions.title,\n        accessibility: chartOptions.accessibility,\n        plotOptions: chartOptions.plotOptions,\n        series: [{\n          name: '',\n          //colorByPoint: true,\n          data: [{\n            name: 'Passed',\n            y: stats[cardIndex].PassedCount,\n            //sliced: false,\n            //selected: false,\n            color: '#008000'\n          }, {\n            name: 'Failed',\n            y: stats[cardIndex].FailedCount,\n            color: '#FF0000'\n          }, {\n            name: 'Unanswered',\n            y: stats[cardIndex].Unanswered,\n            color: '#638089'\n          }]\n        }]\n      });\n    }\n  }\n\n  assessmentInfo(data) {\n    if (data.PassedCount + data.FailedCount === 0) {\n      return \"This assessment hasn't been started yet.\";\n    } else return data.Percentage + '% completed';\n  }\n\n  assessmentStatus(data) {\n    if (data.PassedCount + data.FailedCount === 0) {\n      return 'Start Assessment';\n    } else if (data.Unanswered > 0) {\n      return 'Continue Assessment';\n    } else if (data.Unanswered === 0) {\n      return 'Review Assessment';\n    }\n\n    return '';\n  }\n\n  render() {\n    const chartOptions = {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie',\n        margin: 0,\n        defaultSeriesType: 'areaspline',\n        backgroundColor: '#F2F5F8',\n        spacingLeft: 0\n      },\n      title: {\n        text: ''\n      },\n      accessibility: {\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: false,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: false\n        }\n      }\n    };\n    const eachCard = this.state.Categories.map((item, index) => React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 cardColumn\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"risk_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"actionButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, item.RiskCategoryName), React.createElement(\"h4\", {\n      className: \"risk_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, item.CategoryName), React.createElement(\"div\", {\n      className: \"risk_card_pie_sec row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-6 fullWidthAndHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"CardChartContainer\" + (index + 1),\n      className: \"fullWidthAndHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: chartOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6 col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"legendsTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, item.PassedCount)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle legendPassed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"judged as Passed\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, item.FailedCount)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle legendfailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"judged as Failed\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, item.Unanswered)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"not judged yet\"))))), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"risk_card_overlay overlaySec\",\n      id: \"sysAnddelivaryCardLayer\" + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"risk_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, item.CategoryName)), React.createElement(\"div\", {\n      style: {\n        margin: \"30px 0 15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.assessmentInfo(item)), React.createElement(\"button\", {\n      className: \"actionButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.assessmentStatus(item)))), React.createElement(\"div\", {\n      className: \"risk_card_mobile_overlay overlaySec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inlineMiddile\",\n      style: {\n        width: 'calc(100% - 205px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.assessmentInfo(item)), React.createElement(\"button\", {\n      className: \"actionButton inlineMiddile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.assessmentStatus(item)))));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row cardsRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, eachCard));\n  }\n\n}","map":{"version":3,"sources":["C:/GTZ_Local_Source/tax-app/src/Components/cardConatiner.js"],"names":["React","Component","$","HighchartsReact","Highcharts","CardContainer","constructor","props","state","Categories","serviceBaseUrl","componentWillMount","ajax","url","dataType","success","data","setState","console","log","bind","error","document","documentElement","className","applyChart","stats","chartOptions","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","margin","defaultSeriesType","backgroundColor","spacingLeft","title","text","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","cardIndex","length","chartID","series","name","y","PassedCount","color","FailedCount","Unanswered","assessmentInfo","Percentage","assessmentStatus","render","eachCard","map","item","index","RiskCategoryName","CategoryName","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,cAAc,EACZ;AAHS,KAAb;AAKD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBT,IAAAA,CAAC,CAACU,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAG,GAAE,KAAKL,KAAL,CAAWE,cAAe,0BAD7B;AAELI,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,OAAO,EAAE,UAASC,IAAT,EAAe;AACtB,aAAKC,QAAL,CAAc;AACZR,UAAAA,UAAU,EAAEO;AADA,SAAd,EADsB,CAItB;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB;AACD,OANQ,CAMPI,IANO,CAMF,IANE,CAHJ;AAULC,MAAAA,KAAK,EAAE,UAASA,KAAT,EAAgB;AACrBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAFM,CAELD,IAFK,CAEA,IAFA;AAVF,KAAP;AAeAE,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,IACA,kBAAkBF,QAAQ,CAACC,eAA5B,GAA+C,WAA/C,GAA6D,cAD5D;AAED;;AAEDE,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAClB;AACA,QAAIC,YAAY,GAAG;AAClBC,MAAAA,KAAK,EAAE;AACNC,QAAAA,mBAAmB,EAAE,IADf;AAENC,QAAAA,eAAe,EAAE,IAFX;AAGNC,QAAAA,UAAU,EAAE,KAHN;AAINC,QAAAA,IAAI,EAAE,KAJA;AAKNC,QAAAA,MAAM,EAAE,CALF;AAMNC,QAAAA,iBAAiB,EAAE,YANb;AAONC,QAAAA,eAAe,EAAE,SAPX;AAQNC,QAAAA,WAAW,EAAE;AARP,OADW;AAWlBC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAXW;AAelBC,MAAAA,aAAa,EAAE;AACdC,QAAAA,KAAK,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AADO,OAfG;AAoBlBC,MAAAA,WAAW,EAAE;AACZC,QAAAA,GAAG,EAAE;AACJC,UAAAA,gBAAgB,EAAE,KADd;AAEJC,UAAAA,MAAM,EAAE,SAFJ;AAGJC,UAAAA,UAAU,EAAE;AACXC,YAAAA,OAAO,EAAE;AADE,WAHR;AAMJC,UAAAA,YAAY,EAAE;AANV;AADO;AApBK,KAAnB,CAFkB,CAiClB;;AACA,SAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGvB,KAAK,CAACwB,MAA1C,EAAkDD,SAAS,EAA3D,EAA+D;AAC9D,UAAIE,OAAO,GAAG,wBAAwBF,SAAS,GAAG,CAApC,CAAd;AACA7C,MAAAA,UAAU,CAACwB,KAAX,CAAiBuB,OAAjB,EAA0B;AACzBvB,QAAAA,KAAK,EAAED,YAAY,CAACC,KADK;AAEzBS,QAAAA,KAAK,EAAEV,YAAY,CAACU,KAFK;AAGzBE,QAAAA,aAAa,EAAEZ,YAAY,CAACY,aAHH;AAIzBG,QAAAA,WAAW,EAAEf,YAAY,CAACe,WAJD;AAKzBU,QAAAA,MAAM,EAAE,CAAC;AACRC,UAAAA,IAAI,EAAE,EADE;AAER;AACArC,UAAAA,IAAI,EAAE,CAAC;AACNqC,YAAAA,IAAI,EAAE,QADA;AAENC,YAAAA,CAAC,EAAE5B,KAAK,CAACuB,SAAD,CAAL,CAAiBM,WAFd;AAGN;AACA;AACAC,YAAAA,KAAK,EAAE;AALD,WAAD,EAMH;AACFH,YAAAA,IAAI,EAAE,QADJ;AAEFC,YAAAA,CAAC,EAAE5B,KAAK,CAACuB,SAAD,CAAL,CAAiBQ,WAFlB;AAGFD,YAAAA,KAAK,EAAE;AAHL,WANG,EAUH;AACFH,YAAAA,IAAI,EAAE,YADJ;AAEFC,YAAAA,CAAC,EAAE5B,KAAK,CAACuB,SAAD,CAAL,CAAiBS,UAFlB;AAGFF,YAAAA,KAAK,EAAE;AAHL,WAVG;AAHE,SAAD;AALiB,OAA1B;AAyBA;AACD;;AAEAG,EAAAA,cAAc,CAAC3C,IAAD,EAAO;AACrB,QAAIA,IAAI,CAACuC,WAAL,GAAmBvC,IAAI,CAACyC,WAAxB,KAAwC,CAA5C,EAA+C;AAC9C,aAAO,0CAAP;AACA,KAFD,MAIC,OAAOzC,IAAI,CAAC4C,UAAL,GAAkB,aAAzB;AACA;;AACDC,EAAAA,gBAAgB,CAAC7C,IAAD,EAAO;AACvB,QAAIA,IAAI,CAACuC,WAAL,GAAmBvC,IAAI,CAACyC,WAAxB,KAAwC,CAA5C,EAA+C;AAC9C,aAAO,kBAAP;AACA,KAFD,MAGK,IAAIzC,IAAI,CAAC0C,UAAL,GAAkB,CAAtB,EAAyB;AAC7B,aAAO,qBAAP;AACA,KAFI,MAGA,IAAI1C,IAAI,CAAC0C,UAAL,KAAoB,CAAxB,EAA2B;AAC/B,aAAO,mBAAP;AACA;;AAED,WAAO,EAAP;AACA;;AAEAI,EAAAA,MAAM,GAAG;AACP,UAAMnC,YAAY,GAAE;AAClBC,MAAAA,KAAK,EAAE;AACTC,QAAAA,mBAAmB,EAAE,IADZ;AAETC,QAAAA,eAAe,EAAE,IAFR;AAGTC,QAAAA,UAAU,EAAE,KAHH;AAITC,QAAAA,IAAI,EAAE,KAJG;AAKTC,QAAAA,MAAM,EAAE,CALC;AAMTC,QAAAA,iBAAiB,EAAE,YANV;AAOTC,QAAAA,eAAe,EAAE,SAPR;AAQTC,QAAAA,WAAW,EAAE;AARJ,OADW;AAWrBC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAXc;AAerBC,MAAAA,aAAa,EAAE;AACdC,QAAAA,KAAK,EAAE;AACNC,UAAAA,WAAW,EAAE;AADP;AADO,OAfM;AAoBrBC,MAAAA,WAAW,EAAE;AACZC,QAAAA,GAAG,EAAE;AACJC,UAAAA,gBAAgB,EAAE,KADd;AAEJC,UAAAA,MAAM,EAAE,SAFJ;AAGJC,UAAAA,UAAU,EAAE;AACXC,YAAAA,OAAO,EAAE;AADE,WAHR;AAMJC,UAAAA,YAAY,EAAE;AANV;AADO;AApBQ,KAApB;AA+BA,UAAMe,QAAQ,GAAG,KAAKvD,KAAL,CAAWC,UAAX,CAAsBuD,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KACzC;AAAK,MAAA,SAAS,EAAC,+BAAf;AAA+C,MAAA,GAAG,EAAEA,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,gBADR,CADF,EAIE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCF,IAAI,CAACG,YAAtC,CAJF,EAKE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAE,wBAAsBF,KAAK,GAAC,CAA5B,CADN;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE9D,UAA7B;AAAyC,MAAA,OAAO,EAAEuB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASsC,IAAI,CAACV,WAAd,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASU,IAAI,CAACR,WAAd,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CAVF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASQ,IAAI,CAACP,UAAd,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CAnBF,CADF,CADF,CARF,EAyCE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CALF,EAgDE;AACA,MAAA,SAAS,EAAC,8BADV;AAEA,MAAA,EAAE,EAAE,4BAA4BQ,KAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,IAAI,CAACG,YAAtC,CADF,CAHA,EAMA;AAAK,MAAA,KAAK,EAAE;AAAEnC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAK0B,cAAL,CAAoBM,IAApB,CAAxC,CANA,EAOA;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKJ,gBAAL,CAAsBI,IAAtB,CAAlC,CAPA,CAhDF,CADF,EA2DE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEH;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAC;AAAP,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqE,KAAKV,cAAL,CAAoBM,IAApB,CAArE,CAFG,EAGH;AAAQ,MAAA,SAAS,EAAC,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgD,KAAKJ,gBAAL,CAAsBI,IAAtB,CAAhD,CAHG,CA3DF,CADe,CAAjB;AAmEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BF,QAA/B,CADF,CADF;AAKD;;AA5NkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\n\r\nexport default class CardContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Categories: [],\r\n      serviceBaseUrl:\r\n        \"https://gtz-proj-neo-01.southindia.cloudapp.azure.com/JsonToWebAPI2/v1\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    $.ajax({\r\n      url: `${this.state.serviceBaseUrl}/Categories/RiskProfiles`,\r\n      dataType: \"json\",\r\n      success: function(data) {\r\n        this.setState({\r\n          Categories: data\r\n        });\r\n        //this.applyChart(data);\r\n        console.log(data[0]);\r\n      }.bind(this),\r\n      error: function(error) {\r\n        console.log(error);\r\n      }.bind(this)\r\n    });\r\n\r\n    document.documentElement.className +=\r\n\t\t((\"ontouchstart\" in document.documentElement) ? 'touch-app' : 'no-touch-app');\r\n  }\r\n\r\n  applyChart(stats) {\r\n\t\t//Common chart options for risk cards\r\n\t\tvar chartOptions = {\r\n\t\t\tchart: {\r\n\t\t\t\tplotBackgroundColor: null,\r\n\t\t\t\tplotBorderWidth: null,\r\n\t\t\t\tplotShadow: false,\r\n\t\t\t\ttype: 'pie',\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tdefaultSeriesType: 'areaspline',\r\n\t\t\t\tbackgroundColor: '#F2F5F8',\r\n\t\t\t\tspacingLeft: 0\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: ''\r\n\t\t\t},\r\n\r\n\t\t\taccessibility: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tvalueSuffix: '%'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tpie: {\r\n\t\t\t\t\tallowPointSelect: false,\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tshowInLegend: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Build the chart\r\n\t\tfor (var cardIndex = 0; cardIndex < stats.length; cardIndex++) {\r\n\t\t\tvar chartID = 'CardChartContainer' + (cardIndex + 1);\r\n\t\t\tHighcharts.chart(chartID, {\r\n\t\t\t\tchart: chartOptions.chart,\r\n\t\t\t\ttitle: chartOptions.title,\r\n\t\t\t\taccessibility: chartOptions.accessibility,\r\n\t\t\t\tplotOptions: chartOptions.plotOptions,\r\n\t\t\t\tseries: [{\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\t//colorByPoint: true,\r\n\t\t\t\t\tdata: [{\r\n\t\t\t\t\t\tname: 'Passed',\r\n\t\t\t\t\t\ty: stats[cardIndex].PassedCount,\r\n\t\t\t\t\t\t//sliced: false,\r\n\t\t\t\t\t\t//selected: false,\r\n\t\t\t\t\t\tcolor: '#008000'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tname: 'Failed',\r\n\t\t\t\t\t\ty: stats[cardIndex].FailedCount,\r\n\t\t\t\t\t\tcolor: '#FF0000'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tname: 'Unanswered',\r\n\t\t\t\t\t\ty: stats[cardIndex].Unanswered,\r\n\t\t\t\t\t\tcolor: '#638089'\r\n\t\t\t\t\t}]\r\n\t\t\t\t}]\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n  assessmentInfo(data) {\r\n\t\tif (data.PassedCount + data.FailedCount === 0) {\r\n\t\t\treturn \"This assessment hasn't been started yet.\";\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn data.Percentage + '% completed';\r\n  }\r\n  assessmentStatus(data) {\r\n\t\tif (data.PassedCount + data.FailedCount === 0) {\r\n\t\t\treturn 'Start Assessment';\r\n\t\t}\r\n\t\telse if (data.Unanswered > 0) {\r\n\t\t\treturn 'Continue Assessment';\r\n\t\t}\r\n\t\telse if (data.Unanswered === 0) {\r\n\t\t\treturn 'Review Assessment';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t};\r\n\r\n  render() {\r\n    const chartOptions ={\r\n      chart: {\r\n\t\t\t\tplotBackgroundColor: null,\r\n\t\t\t\tplotBorderWidth: null,\r\n\t\t\t\tplotShadow: false,\r\n\t\t\t\ttype: 'pie',\r\n\t\t\t\tmargin: 0,\r\n\t\t\t\tdefaultSeriesType: 'areaspline',\r\n\t\t\t\tbackgroundColor: '#F2F5F8',\r\n\t\t\t\tspacingLeft: 0\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: ''\r\n\t\t\t},\r\n\r\n\t\t\taccessibility: {\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tvalueSuffix: '%'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tpie: {\r\n\t\t\t\t\tallowPointSelect: false,\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tshowInLegend: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    const eachCard = this.state.Categories.map((item, index) => (\r\n      <div className=\"col-md-4 col-sm-12 cardColumn\" key={index}>\r\n        <div className=\"risk_card\">\r\n          <button type=\"button\" className=\"actionButton\">\r\n            {item.RiskCategoryName}\r\n          </button>\r\n          <h4 className=\"risk_card_title\">{item.CategoryName}</h4>\r\n          <div className=\"risk_card_pie_sec row\">\r\n            <div className=\"col-md-6 col-6 fullWidthAndHeight\">\r\n              <div\r\n                id={\"CardChartContainer\"+(index+1)}\r\n                className=\"fullWidthAndHeight\"\r\n              ></div>\r\n              <HighchartsReact highcharts={Highcharts} options={chartOptions}/>\r\n            </div>\r\n            <div className=\"col-md-6 col-6\">\r\n              <table className=\"legendsTable\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.PassedCount}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle legendPassed\">&nbsp;</span>\r\n                    </td>\r\n                    <td>judged as Passed</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.FailedCount}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle legendfailed\">&nbsp;</span>\r\n                    </td>\r\n                    <td>judged as Failed</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.Unanswered}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle\">&nbsp;</span>\r\n                    </td>\r\n                    <td>not judged yet</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n          <div\r\n          className=\"risk_card_overlay overlaySec\"\r\n          id={\"sysAnddelivaryCardLayer\" + index}>\r\n          <div>\r\n            <h4 className=\"risk_card_title\">{item.CategoryName}</h4>\r\n          </div>\r\n          <div style={{ margin: \"30px 0 15px\" }}>{this.assessmentInfo(item)}</div>\r\n          <button className=\"actionButton\">{this.assessmentStatus(item)}</button>\r\n        </div>\r\n        </div>\r\n        <div className=\"risk_card_mobile_overlay overlaySec\">\r\n\r\n\t\t\t\t\t<div className=\"inlineMiddile\" style={{width:'calc(100% - 205px)'}}>{this.assessmentInfo(item)}</div>\r\n\t\t\t\t\t<button className=\"actionButton inlineMiddile\">{this.assessmentStatus(item)}</button>\r\n\t\t\t\t</div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row cardsRow\">{eachCard}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}