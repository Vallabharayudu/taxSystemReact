{"ast":null,"code":"var _jsxFileName = \"C:\\\\GTZ_Local_Source\\\\tax-app\\\\src\\\\Components\\\\cardConatiner.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport $ from \"jquery\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nexport default class CardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Categories: [],\n      serviceBaseUrl: \"https://gtz-proj-neo-01.southindia.cloudapp.azure.com/JsonToWebAPI2/v1\"\n    };\n  }\n\n  componentWillMount() {\n    $.ajax({\n      url: `${this.state.serviceBaseUrl}/Categories/RiskProfiles`,\n      dataType: \"json\",\n      async: false,\n      success: function (data) {\n        this.setState({\n          Categories: data\n        });\n        console.log(data[0]);\n      }.bind(this),\n      error: function (error) {\n        console.log(error);\n      }\n    });\n    console.log('Will Mount');\n  }\n\n  componentDidMount() {\n    document.documentElement.className += \"ontouchstart\" in document.documentElement ? \"touch-app \" : \"no-touch-app \";\n    console.log('Did Mount');\n  }\n\n  computeRiskCss(item) {\n    let itemName;\n\n    if (item) {\n      itemName = item.RiskCategoryName;\n    }\n\n    switch (itemName) {\n      case \"Moderate Risk\":\n        return \"moderateRisk noBorder\";\n\n      case \"Low Risk\":\n        return \"lowRisk noBorder\";\n\n      case \"Moderate-High Risk\":\n        return \"highModerateRisk noBorder\";\n\n      case \"High Risk\":\n        return \"highRisk noBorder\";\n\n      default:\n        return \"\";\n    }\n  }\n\n  applyChart(stats) {\n    //Common chart options for risk cards\n    var chartOptions = {\n      chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: \"pie\",\n        margin: 0,\n        defaultSeriesType: \"areaspline\",\n        backgroundColor: \"#F2F5F8\",\n        spacingLeft: 0\n      },\n      title: {\n        text: \"\"\n      },\n      accessibility: {\n        point: {\n          valueSuffix: \"%\"\n        }\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: false,\n          cursor: \"pointer\",\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: false\n        }\n      },\n      series: [{\n        name: \"\",\n        //colorByPoint: true,\n        data: [{\n          name: \"Passed\",\n          y: stats.PassedCount,\n          //sliced: false,\n          //selected: false,\n          color: \"#008000\"\n        }, {\n          name: \"Failed\",\n          y: stats.FailedCount,\n          color: \"#FF0000\"\n        }, {\n          name: \"Unanswered\",\n          y: stats.Unanswered,\n          color: \"#638089\"\n        }]\n      }]\n    };\n    return chartOptions;\n  }\n\n  assessmentInfo(data) {\n    if (data.PassedCount + data.FailedCount === 0) {\n      return \"This assessment hasn't been started yet.\";\n    } else return data.Percentage + \"% completed\";\n  }\n\n  assessmentStatus(data) {\n    if (data.PassedCount + data.FailedCount === 0) {\n      return \"Start Assessment\";\n    } else if (data.Unanswered > 0) {\n      return \"Continue Assessment\";\n    } else if (data.Unanswered === 0) {\n      return \"Review Assessment\";\n    }\n\n    return \"\";\n  }\n\n  render() {\n    console.log('Started', this.state.Categories);\n    const eachCard = this.state.Categories.map((item, index) => React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-12 cardColumn\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"risk_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"actionButton \" + this.computeRiskCss(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, item.RiskCategoryName), React.createElement(\"h4\", {\n      className: \"risk_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, item.CategoryName), React.createElement(\"div\", {\n      className: \"risk_card_pie_sec row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-6 fullWidthAndHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"CardChartContainer\" + (index + 1),\n      className: \"fullWidthAndHeight charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.applyChart(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-6 col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"legendsTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, item.PassedCount)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle legendPassed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"judged as Passed\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, item.FailedCount)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle legendfailed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"judged as Failed\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, item.Unanswered)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"legendCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"not judged yet\"))))), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"risk_card_overlay overlaySec\",\n      id: \"sysAnddelivaryCardLayer\" + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"risk_card_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, item.CategoryName)), React.createElement(\"div\", {\n      style: {\n        margin: \"30px 0 15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.assessmentInfo(item)), React.createElement(\"button\", {\n      className: \"actionButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.assessmentStatus(item)))), React.createElement(\"div\", {\n      className: \"risk_card_mobile_overlay overlaySec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inlineMiddile\",\n      style: {\n        width: \"calc(100% - 205px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.assessmentInfo(item)), React.createElement(\"button\", {\n      className: \"actionButton inlineMiddile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.assessmentStatus(item)))));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row cardsRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, eachCard));\n  }\n\n}\nrender(React.createElement(CardContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 235\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/GTZ_Local_Source/tax-app/src/Components/cardConatiner.js"],"names":["React","Component","render","$","HighchartsReact","Highcharts","CardContainer","constructor","props","state","Categories","serviceBaseUrl","componentWillMount","ajax","url","dataType","async","success","data","setState","console","log","bind","error","componentDidMount","document","documentElement","className","computeRiskCss","item","itemName","RiskCategoryName","applyChart","stats","chartOptions","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","margin","defaultSeriesType","backgroundColor","spacingLeft","title","text","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","series","name","y","PassedCount","color","FailedCount","Unanswered","assessmentInfo","Percentage","assessmentStatus","eachCard","map","index","CategoryName","width","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport $ from \"jquery\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"highcharts\";\r\n\r\nexport default class CardContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Categories: [],\r\n      serviceBaseUrl:\r\n        \"https://gtz-proj-neo-01.southindia.cloudapp.azure.com/JsonToWebAPI2/v1\"\r\n    };\r\n  }\r\n\r\n  componentWillMount () {\r\n    $.ajax({\r\n      url: `${this.state.serviceBaseUrl}/Categories/RiskProfiles`,\r\n      dataType: \"json\",\r\n      async:false,\r\n      success: function(data) {\r\n        this.setState({\r\n          Categories: data\r\n        });\r\n        console.log(data[0]);\r\n      }.bind(this),\r\n      error: function(error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log('Will Mount');\r\n  }\r\n  componentDidMount() {\r\n    document.documentElement.className +=\r\n      \"ontouchstart\" in document.documentElement\r\n        ? \"touch-app \"\r\n        : \"no-touch-app \";\r\n        console.log('Did Mount')\r\n  }\r\n\r\n  computeRiskCss(item) {\r\n    let itemName;\r\n    if (item) {\r\n      itemName = item.RiskCategoryName;\r\n    }\r\n\r\n    switch (itemName) {\r\n      case \"Moderate Risk\":\r\n        return \"moderateRisk noBorder\";\r\n      case \"Low Risk\":\r\n        return \"lowRisk noBorder\";\r\n      case \"Moderate-High Risk\":\r\n        return \"highModerateRisk noBorder\";\r\n      case \"High Risk\":\r\n        return \"highRisk noBorder\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  applyChart(stats) {\r\n    //Common chart options for risk cards\r\n    var chartOptions = {\r\n      chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: \"pie\",\r\n        margin: 0,\r\n        defaultSeriesType: \"areaspline\",\r\n        backgroundColor: \"#F2F5F8\",\r\n        spacingLeft: 0\r\n      },\r\n      title: {\r\n        text: \"\"\r\n      },\r\n\r\n      accessibility: {\r\n        point: {\r\n          valueSuffix: \"%\"\r\n        }\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: false,\r\n          cursor: \"pointer\",\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          showInLegend: false\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"\",\r\n          //colorByPoint: true,\r\n          data: [\r\n            {\r\n              name: \"Passed\",\r\n              y: stats.PassedCount,\r\n              //sliced: false,\r\n              //selected: false,\r\n              color: \"#008000\"\r\n            },\r\n            {\r\n              name: \"Failed\",\r\n              y: stats.FailedCount,\r\n              color: \"#FF0000\"\r\n            },\r\n            {\r\n              name: \"Unanswered\",\r\n              y: stats.Unanswered,\r\n              color: \"#638089\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n    return chartOptions;\r\n  }\r\n\r\n  assessmentInfo(data) {\r\n    if (data.PassedCount + data.FailedCount === 0) {\r\n      return \"This assessment hasn't been started yet.\";\r\n    } else return data.Percentage + \"% completed\";\r\n  }\r\n  assessmentStatus(data) {\r\n    if (data.PassedCount + data.FailedCount === 0) {\r\n      return \"Start Assessment\";\r\n    } else if (data.Unanswered > 0) {\r\n      return \"Continue Assessment\";\r\n    } else if (data.Unanswered === 0) {\r\n      return \"Review Assessment\";\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  render() {\r\n    console.log('Started',this.state.Categories);\r\n    const eachCard = this.state.Categories.map((item, index) => (\r\n      <div className=\"col-md-4 col-sm-12 cardColumn\" key={index}>\r\n        <div className=\"risk_card\">\r\n          <button\r\n            type=\"button\"\r\n            className={\"actionButton \" + this.computeRiskCss(item)}\r\n          >\r\n            {item.RiskCategoryName}\r\n          </button>\r\n          <h4 className=\"risk_card_title\">{item.CategoryName}</h4>\r\n          <div className=\"risk_card_pie_sec row\">\r\n            <div className=\"col-md-6 col-6 fullWidthAndHeight\">\r\n              <div\r\n                id={\"CardChartContainer\" + (index + 1)}\r\n                className=\"fullWidthAndHeight charts\"\r\n              >\r\n                <HighchartsReact\r\n                  highcharts={Highcharts}\r\n                  options={this.applyChart(item)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-6\">\r\n              <table className=\"legendsTable\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.PassedCount}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle legendPassed\">&nbsp;</span>\r\n                    </td>\r\n                    <td>judged as Passed</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.FailedCount}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle legendfailed\">&nbsp;</span>\r\n                    </td>\r\n                    <td>judged as Failed</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>{item.Unanswered}</strong>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"legendCircle\">&nbsp;</span>\r\n                    </td>\r\n                    <td>not judged yet</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n          <div\r\n            className=\"risk_card_overlay overlaySec\"\r\n            id={\"sysAnddelivaryCardLayer\" + index}\r\n          >\r\n            <div>\r\n              <h4 className=\"risk_card_title\">{item.CategoryName}</h4>\r\n            </div>\r\n            <div style={{ margin: \"30px 0 15px\" }}>\r\n              {this.assessmentInfo(item)}\r\n            </div>\r\n            <button className=\"actionButton\">\r\n              {this.assessmentStatus(item)}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"risk_card_mobile_overlay overlaySec\">\r\n          <div\r\n            className=\"inlineMiddile\"\r\n            style={{ width: \"calc(100% - 205px)\" }}\r\n          >\r\n            {this.assessmentInfo(item)}\r\n          </div>\r\n          <button className=\"actionButton inlineMiddile\">\r\n            {this.assessmentStatus(item)}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row cardsRow\">{eachCard}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nrender(<CardContainer />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}